{"version":3,"sources":["constants/dateTimeFormats.js","utils/index.js","constants/initialEvents.js","constants/calendarFormats.js","components/Modal.js","constants/eventOptions.js","components/Select.js","pages/calendar/components/CreateEventForm.js","pages/calendar/components/EditEventForm.js","pages/calendar/components/WeekHeader.js","pages/calendar/BigCalendar.js","pages/indexPage/App.js","index.js"],"names":["DATE_TIME","UIDv4","a","Math","random","toString","replace","formatDateForList","date","time","startOrEnd","moment","set","hour","split","substring","minute","_d","formatDateOnCreateEvent","initialEvents","id","title","start","add","end","type","allDay","notes","startOf","endOf","calendarFormats","dateFormat","dayFormat","Modal","top","left","onClose","children","className","style","onClick","onKeyPress","role","tabIndex","defaultProps","eventOptions","name","Select","placeholder","options","onSelect","isError","onBlur","errorText","value","useState","isOpen","setIsOpen","selectOption","option","map","key","CreateEventForm","onCancel","onSubmit","initialValues","format","color","onChange","formikMethod","length","test","validate","values","errors","isBefore","actions","setSubmitting","render","handleBlur","setFieldValue","touched","isSubmitting","submitForm","isValid","setTouched","event","target","Boolean","disabled","EditEventForm","eventInfo","WeekHeader","localizer","momentLocalizer","BigCalendar","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","eventList","setEventList","selectedSlot","setSelectedSlot","eventToEdit","setEventToEdit","editModalOffset","setEditModalOffset","currentView","setCurrentView","useEffect","DraggableCalendar","withDragAndDrop","Calendar","formats","events","startAccessor","endAccessor","showMultiDayTimes","eventPropGetter","components","week","timeGutterHeader","onSelectSlot","slot","undefined","selectable","onSelectEvent","e","pageY","pageX","draggableAccessor","resizableAccessor","onEventDrop","eventDragged","previousEvents","filter","view","onView","box","y","bounds","bottom","x","formValues","App","root","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.7f92984d.chunk.js","sourcesContent":["export const FORM_DATE = 'DD/MM/YYYY';\r\nexport const FORM_TIME = 'HH:mm';\r\nexport const DATE_TIME = `${FORM_DATE} ${FORM_TIME}`;\r\nexport const DATE_WITHOUT_ZERO = 'D';\r\nexport const WEEK_DAY_SHORT_DATE_MONTH = 'ddd DD/MM';\r\nexport const EVENT_DISPLAY_TIME = 'HH:MM';\r\n","/* eslint-disable no-bitwise */\r\nimport moment from 'moment';\r\n\r\nimport {FORM_DATE, DATE_TIME} from 'constants/dateTimeFormats';\r\n\r\n/**\r\n * Returns unique id\r\n * @param {*} a\r\n */\r\nexport const UIDv4 = a =>\r\n  a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, UIDv4);\r\n\r\n/**\r\n * @param {Date} date - event date, only one day event allowed\r\n * @param {string} [time=20:30 - 23:59] - event is happening within this time range\r\n * @param {string} [startOrEnd=start | end] - start or end of event range\r\n * Return Date for event list item\r\n */\r\nexport const formatDateForList = (date, time, startOrEnd) => {\r\n  if (startOrEnd === 'start') {\r\n    return moment(date, FORM_DATE).set({\r\n      hour: time.split(' - ')[0].substring(0, 2),\r\n      minute: time.split(' - ')[0].substring(3),\r\n    })._d;\r\n  }\r\n\r\n  return moment(date, FORM_DATE).set({\r\n    hour: time.split(' - ')[1].substring(0, 2),\r\n    minute: time.split(' - ')[1].substring(3),\r\n  })._d;\r\n};\r\n\r\n/**\r\n * Return Date for event list item\r\n * @param {Date} date - event date, only one day event allowed\r\n * @param {string} time\r\n * @param {string} [startOrEnd=start | end] - start or end of event range\r\n */\r\nexport const formatDateOnCreateEvent = (date, time, startOrEnd) => {\r\n  return moment(\r\n    `${date} ${time.split(' - ')[startOrEnd === 'start' ? 0 : 1]}`,\r\n    DATE_TIME,\r\n  )._d;\r\n};\r\n","import moment from 'moment';\r\n\r\nimport {UIDv4} from 'utils';\r\n\r\nconst initialEvents = [\r\n  {\r\n    id: UIDv4(),\r\n    title: 'Party',\r\n    start: moment().add(2, 'days')._d,\r\n    end: moment().add(2, 'days')._d,\r\n    type: 'birthday',\r\n    allDay: true,\r\n    notes: '123',\r\n  },\r\n  {\r\n    id: UIDv4(),\r\n    title: 'Walking',\r\n    start: moment().startOf('hour')._d,\r\n    end: moment().endOf('hour')._d,\r\n    type: 'personal',\r\n    notes: '1234',\r\n  },\r\n  {\r\n    id: UIDv4(),\r\n    title: 'Lunch',\r\n    start: moment().set({\r\n      hour: 15,\r\n      minute: 30,\r\n    })._d,\r\n    end: moment().set({\r\n      hour: 17,\r\n      minute: 0,\r\n    })._d,\r\n    type: 'reminder',\r\n    notes: '12345',\r\n  },\r\n  {\r\n    id: UIDv4(),\r\n    title: 'Meeting',\r\n    start: moment()\r\n      .add(4, 'days')\r\n      .set({\r\n        hour: 12,\r\n        minute: 0,\r\n      })._d,\r\n    end: moment()\r\n      .add(4, 'days')\r\n      .set({\r\n        hour: 15,\r\n        minute: 30,\r\n      })._d,\r\n    type: 'meeting',\r\n    notes: '123456',\r\n  },\r\n];\r\n\r\nexport default initialEvents;\r\n","import {DATE_WITHOUT_ZERO, WEEK_DAY_SHORT_DATE_MONTH} from './dateTimeFormats';\r\n\r\nconst calendarFormats = {\r\n  dateFormat: DATE_WITHOUT_ZERO,\r\n  dayFormat: WEEK_DAY_SHORT_DATE_MONTH,\r\n};\r\n\r\nexport default calendarFormats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'styles/modal.scss';\r\n\r\nconst Modal = ({top, left, onClose, children}) => (\r\n  <div\r\n    className=\"modal-container\"\r\n    style={{\r\n      top,\r\n      left: left - 63,\r\n    }}\r\n  >\r\n    <div className=\"modal-content\">\r\n      <div\r\n        className=\"close\"\r\n        onClick={onClose}\r\n        onKeyPress={onClose}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <i className=\"fa fa-times-circle\" />\r\n      </div>\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nModal.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nModal.propTypes = {\r\n  top: PropTypes.number.isRequired,\r\n  left: PropTypes.number.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Modal;\r\n","const eventOptions = [\r\n  {\r\n    id: 'birthday',\r\n    name: 'birthday',\r\n  },\r\n  {\r\n    id: 'personal',\r\n    name: 'personal',\r\n  },\r\n  {\r\n    id: 'reminder',\r\n    name: 'reminder',\r\n  },\r\n  {\r\n    id: 'meeting',\r\n    name: 'meeting',\r\n  },\r\n];\r\n\r\nexport default eventOptions;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'styles/select.scss';\r\n\r\nconst Select = ({\r\n  placeholder,\r\n  options,\r\n  onSelect,\r\n  isError,\r\n  onBlur,\r\n  errorText,\r\n  value,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const selectOption = option => {\r\n    setIsOpen(false);\r\n    onSelect(option);\r\n  };\r\n\r\n  return (\r\n    <div className=\"select-container\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => (isOpen ? setIsOpen(false) : setIsOpen(true))}\r\n        className={`select-button ${isError ? 'border-error' : ''} ${\r\n          value ? 'text-black' : ''\r\n        }`}\r\n        onBlur={onBlur}\r\n      >\r\n        {value || placeholder}\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"select-options\">\r\n          {options.map(option => (\r\n            <div\r\n              key={option.id}\r\n              onClick={() => selectOption(option)}\r\n              className=\"option\"\r\n              onKeyPress={() => selectOption(option)}\r\n              tabIndex=\"0\"\r\n              role=\"button\"\r\n            >\r\n              <span className={`color-indicator event-${option.id}`} />\r\n              <span\r\n                className={`${option.id === placeholder ? 'text-bold' : ''}`}\r\n              >\r\n                {option.name}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {errorText ? <span className=\"text-error\">{errorText}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nSelect.defaultProps = {\r\n  isError: false,\r\n  onBlur: () => {},\r\n  errorText: '',\r\n  value: '',\r\n};\r\n\r\nSelect.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n  isError: PropTypes.bool,\r\n  onBlur: PropTypes.func,\r\n  errorText: PropTypes.string,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {Formik} from 'formik';\r\n\r\nimport eventOptions from 'constants/eventOptions';\r\nimport {FORM_DATE, FORM_TIME} from 'constants/dateTimeFormats';\r\n\r\nimport Select from 'components/Select';\r\n\r\nconst CreateEventForm = ({start, end, onCancel, onSubmit}) => {\r\n  const initialValues = {\r\n    title: '',\r\n    date: moment(start).format(FORM_DATE),\r\n    time: `${moment(start).format(FORM_TIME)} - ${moment(end).format(\r\n      FORM_TIME,\r\n    )}`,\r\n    notes: '',\r\n    color: '',\r\n  };\r\n\r\n  const onChange = ({name, value}, formikMethod) => {\r\n    if (value.length < 31) {\r\n      if (\r\n        name === 'notes' ||\r\n        name === 'title' ||\r\n        (name === 'time' && /^[0-9:-\\s]*$/.test(value))\r\n      ) {\r\n        formikMethod(name, value);\r\n      }\r\n      if (name === 'date' && /^[0-9/]*$/.test(value)) {\r\n        formikMethod(name, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (values.title === '') {\r\n          errors = {...errors, title: 'Title is required'};\r\n        }\r\n        if (values.date === '') {\r\n          errors = {...errors, date: 'Date is required'};\r\n        }\r\n        if (values.date && moment(values.date, FORM_DATE).isBefore()) {\r\n          errors = {...errors, date: 'Date should be in future'};\r\n        }\r\n        if (values.time === '') {\r\n          errors = {...errors, time: 'Time is required'};\r\n        }\r\n        if (values.notes === '') {\r\n          errors = {...errors, notes: 'Notes is required'};\r\n        }\r\n        if (values.color === '') {\r\n          errors = {...errors, color: 'Color is required'};\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        actions.setSubmitting(false);\r\n        onSubmit(values);\r\n      }}\r\n      render={({\r\n        values,\r\n        handleBlur,\r\n        setFieldValue,\r\n        errors,\r\n        touched,\r\n        isSubmitting,\r\n        submitForm,\r\n        isValid,\r\n        setTouched,\r\n      }) => (\r\n        <form onSubmit={submitForm}>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event title *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.title && errors.title ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.title && errors.title && (\r\n                <span className=\"text-error\">{errors.title}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event date *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"date\"\r\n                value={values.date}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.date && errors.date ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.date && errors.date && (\r\n                <span className=\"text-error\">{errors.date}</span>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`icon-container ${\r\n                touched.date && errors.date ? 'error-input' : ''\r\n              }`}\r\n            >\r\n              <i className=\"far fa-calendar-alt\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event time *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"time\"\r\n                value={values.time}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.time && errors.time ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.time && errors.time && (\r\n                <span className=\"text-error\">{errors.time}</span>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`icon-container ${\r\n                touched.time && errors.time ? 'error-input' : ''\r\n              }`}\r\n            >\r\n              <i className=\"far fa-clock\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>notes *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"notes\"\r\n                value={values.notes}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.notes && errors.notes ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.notes && errors.notes && (\r\n                <span className=\"text-error\">{errors.notes}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <Select\r\n              placeholder=\"color\"\r\n              value={values.color}\r\n              options={eventOptions}\r\n              onSelect={option => setFieldValue('color', option.id)}\r\n              isError={Boolean(touched.color) && Boolean(errors.color)}\r\n              onBlur={() => {\r\n                setTouched({\r\n                  ...touched,\r\n                  color: true,\r\n                });\r\n              }}\r\n              errorText={touched.color && errors.color ? errors.color : ''}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"button-group\">\r\n            <button onClick={onCancel} type=\"button\">\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={submitForm}\r\n              type=\"button\"\r\n              disabled={isSubmitting || !isValid}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nCreateEventForm.propTypes = {\r\n  start: PropTypes.instanceOf(Date).isRequired,\r\n  end: PropTypes.instanceOf(Date).isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CreateEventForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {Formik} from 'formik';\r\n\r\nimport eventOptions from 'constants/eventOptions';\r\nimport {FORM_DATE, FORM_TIME} from 'constants/dateTimeFormats';\r\n\r\nimport Select from 'components/Select';\r\n\r\nconst EditEventForm = ({eventInfo, onCancel, onSubmit}) => {\r\n  const initialValues = {\r\n    title: eventInfo.title,\r\n    date: moment(eventInfo.start).format(FORM_DATE),\r\n    time: `${moment(eventInfo.start).format(FORM_TIME)} - ${moment(\r\n      eventInfo.end,\r\n    ).format(FORM_TIME)}`,\r\n    notes: eventInfo.notes,\r\n    color: eventInfo.type,\r\n    id: eventInfo.id,\r\n  };\r\n\r\n  const onChange = ({name, value}, formikMethod) => {\r\n    if (value.length < 31) {\r\n      if (\r\n        name === 'notes' ||\r\n        name === 'title' ||\r\n        (name === 'time' && /^[0-9:-\\s]*$/.test(value))\r\n      ) {\r\n        formikMethod(name, value);\r\n      }\r\n      if (name === 'date' && /^[0-9/]*$/.test(value)) {\r\n        formikMethod(name, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (values.title === '') {\r\n          errors = {...errors, title: 'Title is required'};\r\n        }\r\n        if (values.date === '') {\r\n          errors = {...errors, date: 'Date is required'};\r\n        }\r\n        if (values.time === '') {\r\n          errors = {...errors, time: 'Time is required'};\r\n        }\r\n        if (values.notes === '') {\r\n          errors = {...errors, notes: 'Notes is required'};\r\n        }\r\n        if (values.color === '') {\r\n          errors = {...errors, color: 'Color is required'};\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        actions.setSubmitting(false);\r\n        onSubmit(values);\r\n      }}\r\n      render={({\r\n        values,\r\n        handleBlur,\r\n        setFieldValue,\r\n        errors,\r\n        touched,\r\n        isSubmitting,\r\n        submitForm,\r\n        isValid,\r\n        setTouched,\r\n      }) => (\r\n        <form onSubmit={submitForm}>\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event title *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.title && errors.title ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.title && errors.title && (\r\n                <span className=\"text-error\">{errors.title}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event date *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"date\"\r\n                value={values.date}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.date && errors.date ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.date && errors.date && (\r\n                <span className=\"text-error\">{errors.date}</span>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`icon-container ${\r\n                touched.date && errors.date ? 'error-input' : ''\r\n              }`}\r\n            >\r\n              <i className=\"far fa-calendar-alt\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>event time *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"time\"\r\n                value={values.time}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.time && errors.time ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.time && errors.time && (\r\n                <span className=\"text-error\">{errors.time}</span>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`icon-container ${\r\n                touched.time && errors.time ? 'error-input' : ''\r\n              }`}\r\n            >\r\n              <i className=\"far fa-clock\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <div className=\"input-container\">\r\n              <span>notes *</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"notes\"\r\n                value={values.notes}\r\n                onChange={event => {\r\n                  onChange(event.target, setFieldValue);\r\n                }}\r\n                onBlur={handleBlur}\r\n                className={`${\r\n                  touched.notes && errors.notes ? 'error-input' : ''\r\n                }`}\r\n              />\r\n              {touched.notes && errors.notes && (\r\n                <span className=\"text-error\">{errors.notes}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <Select\r\n              placeholder=\"color\"\r\n              value={values.color}\r\n              options={eventOptions}\r\n              onSelect={option => setFieldValue('color', option.id)}\r\n              isError={Boolean(touched.color) && Boolean(errors.color)}\r\n              onBlur={() => {\r\n                setTouched({\r\n                  ...touched,\r\n                  color: true,\r\n                });\r\n              }}\r\n              errorText={touched.color && errors.color ? errors.color : ''}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"button-group\">\r\n            <button onClick={onCancel} type=\"button\">\r\n              Discard\r\n            </button>\r\n            <button\r\n              onClick={submitForm}\r\n              type=\"button\"\r\n              disabled={isSubmitting || !isValid}\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nEditEventForm.propTypes = {\r\n  eventInfo: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    notes: PropTypes.string,\r\n    type: PropTypes.string,\r\n    start: PropTypes.instanceOf(Date),\r\n    end: PropTypes.instanceOf(Date),\r\n  }).isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditEventForm;\r\n","import React from 'react';\r\n\r\nconst WeekHeader = () => (\r\n  <div className=\"time-gutter-week\">\r\n    <div />\r\n    <div className=\"time-gutter-all-day-label\">all day</div>\r\n  </div>\r\n);\r\n\r\nexport default WeekHeader;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\r\nimport moment from 'moment';\r\n\r\nimport {UIDv4, formatDateForList, formatDateOnCreateEvent} from 'utils';\r\n\r\nimport initialEvents from 'constants/initialEvents';\r\nimport calendarFormats from 'constants/calendarFormats';\r\n\r\nimport Modal from 'components/Modal';\r\n\r\nimport 'styles/calendar.scss';\r\n\r\nimport {CreateEventForm, EditEventForm, WeekHeader} from './components';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst BigCalendar = () => {\r\n  const [createModalOpen, setCreateModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n  const [eventList, setEventList] = useState(initialEvents);\r\n  const [selectedSlot, setSelectedSlot] = useState();\r\n  const [eventToEdit, setEventToEdit] = useState();\r\n  const [editModalOffset, setEditModalOffset] = useState({top: 0, left: 0});\r\n  const [currentView, setCurrentView] = useState('month');\r\n\r\n  useEffect(() => {\r\n    setCreateModalOpen(true);\r\n    setEditModalOpen(false);\r\n  }, [selectedSlot]);\r\n\r\n  useEffect(() => {\r\n    setEditModalOpen(true);\r\n    setCreateModalOpen(false);\r\n  }, [eventToEdit]);\r\n\r\n  const handleCreate = formValues => {\r\n    setEventList([\r\n      ...eventList,\r\n      {\r\n        id: UIDv4(),\r\n        title: formValues.title,\r\n        start: formatDateOnCreateEvent(\r\n          formValues.date,\r\n          formValues.time,\r\n          'start',\r\n        ),\r\n        end: formatDateOnCreateEvent(formValues.date, formValues.time, 'end'),\r\n        type: formValues.color,\r\n        notes: formValues.notes,\r\n      },\r\n    ]);\r\n    setCreateModalOpen(false);\r\n  };\r\n\r\n  const handleEdit = formValues => {\r\n    const previousEvents = eventList.filter(\r\n      event => event.id !== formValues.id,\r\n    );\r\n    const {date, time} = formValues;\r\n\r\n    setEventList([\r\n      ...previousEvents,\r\n      {\r\n        id: formValues.id,\r\n        title: formValues.title,\r\n        start: formatDateForList(date, time, 'start'),\r\n        end: formatDateForList(date, time, 'end'),\r\n        type: formValues.color,\r\n        notes: formValues.notes,\r\n      },\r\n    ]);\r\n    setEditModalOpen(false);\r\n  };\r\n\r\n  const removeEvent = () => {\r\n    setEventList(eventList.filter(event => event.id !== eventToEdit.id));\r\n    setEditModalOpen(false);\r\n  };\r\n\r\n  const DraggableCalendar = withDragAndDrop(Calendar);\r\n\r\n  const handleDropEvent = eventDragged => {\r\n    if (!moment(eventDragged.start).isBefore()) {\r\n      const previousEvents = eventList.filter(\r\n        event => event.id !== eventDragged.event.id,\r\n      );\r\n      setEventList([\r\n        ...previousEvents,\r\n        {\r\n          ...eventDragged.event,\r\n          start: eventDragged.start,\r\n          end: eventDragged.end,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <DraggableCalendar\r\n        formats={calendarFormats}\r\n        localizer={localizer}\r\n        events={eventList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        showMultiDayTimes\r\n        eventPropGetter={event => ({\r\n          className: `event-${event.type}`,\r\n        })}\r\n        components={{\r\n          week: {\r\n            timeGutterHeader: WeekHeader,\r\n          },\r\n        }}\r\n        onSelectSlot={slot => {\r\n          if (createModalOpen) {\r\n            setCreateModalOpen(false);\r\n          } else if (!editModalOpen) {\r\n            return !moment(slot.start).isBefore()\r\n              ? setSelectedSlot(slot)\r\n              : false;\r\n          } else {\r\n            setEventToEdit(undefined);\r\n            setEditModalOpen(false);\r\n          }\r\n          return true;\r\n        }}\r\n        selectable\r\n        onSelectEvent={(event, e) => {\r\n          setEventToEdit(event);\r\n          setEditModalOffset({top: e.pageY + 10, left: e.pageX});\r\n        }}\r\n        draggableAccessor={() => true}\r\n        resizableAccessor={() => false}\r\n        onEventDrop={handleDropEvent}\r\n        view={currentView}\r\n        onView={view => {\r\n          setEventToEdit(undefined);\r\n          setCurrentView(view);\r\n          setEditModalOpen(false);\r\n          setCreateModalOpen(false);\r\n        }}\r\n      />\r\n      {createModalOpen && selectedSlot ? (\r\n        <Modal\r\n          top={\r\n            (selectedSlot.box && selectedSlot.box.y) ||\r\n            (selectedSlot.bounds && selectedSlot.bounds.bottom)\r\n          }\r\n          left={\r\n            (selectedSlot.box && selectedSlot.box.x) ||\r\n            (selectedSlot.bounds && selectedSlot.bounds.left)\r\n          }\r\n          onClose={() => setCreateModalOpen(false)}\r\n        >\r\n          <CreateEventForm\r\n            start={selectedSlot.start}\r\n            end={selectedSlot.end}\r\n            onCancel={() => setCreateModalOpen(false)}\r\n            onSubmit={handleCreate}\r\n          />\r\n        </Modal>\r\n      ) : null}\r\n      {editModalOpen && eventToEdit ? (\r\n        <Modal\r\n          top={editModalOffset.top}\r\n          left={editModalOffset.left}\r\n          onClose={() => {\r\n            setEventToEdit(undefined);\r\n            setEditModalOpen(false);\r\n          }}\r\n        >\r\n          <EditEventForm\r\n            eventInfo={eventToEdit}\r\n            onCancel={removeEvent}\r\n            onSubmit={handleEdit}\r\n          />\r\n        </Modal>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigCalendar;\r\n","import React from 'react';\r\n\r\nimport BigCalendar from 'pages/calendar/BigCalendar';\r\n\r\nconst App = () => <BigCalendar />;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'styles/reset-form.css';\r\nimport 'styles/index.scss';\r\n\r\nimport App from 'pages/indexPage/App';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}